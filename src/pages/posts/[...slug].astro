---
import FormattedDate from "@components/FormattedDate.astro";
import OptimizedCover from "@components/OptimizedPicture.astro";
import RelatedPostsCard from "@components/RelatedPostsCard.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

const post = Astro.props;
const { Content } = await post.render();
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <main>
    <article class="prose mx-auto my-16 dark:prose-invert">
      <div class="prose-h1 text-center">
        <h1>{post.data.title}</h1>
      </div>
      <div>
        {
          post.data.cover && (
            <OptimizedCover src={post.data.cover} alt={post.data.coverAlt} />
          )
        }
      </div>
      <div>
        <Content />
      </div>

      <div class="flex justify-between">
        <small
          >Publish on <FormattedDate date={post.data.pubDate} />ï¼ŒUpdate on <FormattedDate
            date={new Date().toISOString()}
          /></small
        >
      </div>
    </article>
    <div class="mt-4">
      <RelatedPostsCard
        currentCategory={post.data.category[0]}
        currentSlug={post.slug}
      />
    </div>
  </main>
</BaseLayout>
